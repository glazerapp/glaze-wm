# To learn more about .editorconfig see https://aka.ms/editorconfigdocs

###############################
# Core EditorConfig Options   #
###############################

# All files
[*]
indent_style = space
end_of_line = crlf

# Code files
[*.{cs,yaml,xaml,json,csproj,sln}]
indent_size = 2
insert_final_newline = true
charset = utf-8

###############################
# .NET Coding Conventions     #
###############################

[*.{cs}]
# Default Severity for all .NET Code Style rules below.
dotnet_analyzer_diagnostic.severity = warning

[*.{cs}]
# Organize usings.
dotnet_sort_system_directives_first = true

# this. preferences.
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

# Language keywords vs BCL types preferences.
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences.
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# Modifier preferences.
dotnet_style_require_accessibility_modifiers = for_non_interface_members
dotnet_style_readonly_field = true

# Expression-level preferences
dotnet_style_object_initializer = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_null_propagation = true
dotnet_style_coalesce_expression = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = false

###############################
# Naming Conventions          #
###############################

# Style Definitions.
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const

###############################
# C# Coding Conventions       #
###############################

[*.cs]
# var preferences.
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

# Expression-bodied members.
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = true
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_accessors = true

# Pattern matching preferences.
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_pattern_matching_over_as_with_null_check = true

# Null-checking preferences.
csharp_style_throw_expression = true
csharp_style_conditional_delegate_call = true

# Modifier preferences.
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Expression-level preferences.
csharp_prefer_braces = true
csharp_style_deconstructed_variable_declaration = true
csharp_prefer_simple_default_expression = true
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_inlined_variable_declaration = true
csharp_style_unused_value_expression_statement_preference = discard_variable:none

###############################
# C# Formatting Rules         #
###############################

# New line preferences.
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences.
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences.
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences.
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

###############################
# Analyzer Rules              #
###############################

# Suppress 'async void lambda' warning in JetBrains editors.
resharper_async_void_lambda_highlighting = hint

roslynator_refactorings.enabled = true
roslynator_compiler_diagnostic_fixes.enabled = true

# Disable rule "Add braces (when expression spans over multiple lines)".
dotnet_diagnostic.IDE0011.severity = none
dotnet_diagnostic.RCS1001.severity = none
dotnet_diagnostic.RCS1003.severity = none

# Disable rule "Populate switch".
dotnet_diagnostic.IDE0072.severity = none

# Disable rule "Use bit shift operator".
dotnet_diagnostic.RCS1237.severity = none

# Disable rule "Add 'param' element to documentation comment".
dotnet_diagnostic.RCS1141.severity = none

# Disable rule "Add 'typeparam' element to documentation comment".
dotnet_diagnostic.RCS1142.severity = none

# Disable rule "Use pattern matching to avoid 'as' followed by a 'null' check".
dotnet_diagnostic.IDE0019.severity = none
dotnet_diagnostic.RCS1221.severity = none

# Disable rule "Declare enum member with zero value (when enum has FlagsAttribute)"
dotnet_diagnostic.RCS1135.severity = none

# Disable rule "Avoid NullReferenceException". Undecided whether to enable, since it can reduce
# clarity when a variable is guaranteed to be defined.
dotnet_diagnostic.RCS1202.severity = none

# TODO: Temporarily disabled.
# Disable rule "P/Invoke methods should not be visible".
dotnet_diagnostic.CA1401.severity = none

# TODO: Temporarily disabled.
# Disable rule "Duplicate enum value".
dotnet_diagnostic.RCS1234.severity = none
dotnet_diagnostic.CA1069.severity = none

# TODO: Temporarily disabled.
# Disable rule "Enum should declare explicit values".
dotnet_diagnostic.RCS1161.severity = none

# Disable rule "Do not declare visible instance fields".
dotnet_diagnostic.CA1051.severity = none

# Disable rule "Exception type is not sufficiently specific".
dotnet_diagnostic.CA2201.severity = none

# Disable rule "Identifiers should not have incorrect suffix".
dotnet_diagnostic.CA1711.severity = none

# Disable rule "Identifiers should not match keywords".
dotnet_diagnostic.CA1716.severity = none

# Disable rule "Use the LoggerMessage delegates".
dotnet_diagnostic.CA1848.severity = none

# TODO: Temporarily disabled.
# Disable rule "Avoid 'StringBuilder' parameters for P/Invokes".
dotnet_diagnostic.CA1838.severity = none

# Add rule exception "Types that own disposable fields should be disposable".
[**/Bus.cs]
dotnet_diagnostic.CA1001.severity = none

[**/*.xaml.cs]
dotnet_diagnostic.RCS1043.severity = none
